{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoApp.js","components/TodoFilter.js","App.js","index.js"],"names":["TodoItem","_ref","todo","changeTodoCompleted","destroyTodo","react_default","a","createElement","className","id","onClick","type","defaultChecked","completed","classnames","todo-completed","htmlFor","title","TodoList","todos","map","components_TodoItem","key","TodoApp","state","getTitle","event","value","target","preventDefault","_this","setState","createTodo","props","addTodo","Object","objectSpread","Date","now","_this$props","this","changeTodoCompletedAll","filterDescription","filterTodos","onSubmit","onChange","placeholder","style","display","components_TodoList","React","Component","TodoFilter","todosFilter","href","App","statusAllTodo","prevState","concat","toConsumableArray","desc","filter","changeStatusAllTodos","destroyAllCompletedTodos","_this$state","components_TodoApp","length","components_TodoFilter","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b25c2f30.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, changeTodoCompleted, destroyTodo }) => (\n  <li className=\"\">\n    <div className=\"view\">\n      <input\n        id={todo.id}\n        onClick={() => changeTodoCompleted(todo.id)}\n        type=\"checkbox\"\n        defaultChecked={todo.completed}\n        className=\"toggle\"\n      />\n      {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n      <label\n        className={classnames({ 'todo-completed': todo.completed })}\n        htmlFor=\"todo-1\"\n      >\n        {todo.title}\n      </label>\n      <button\n        onClick={() => destroyTodo(todo.id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, changeTodoCompleted, destroyTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        changeTodoCompleted={changeTodoCompleted}\n        destroyTodo={destroyTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoList from './TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    id: 0,\n    title: '',\n    completed: false,\n  }\n\n  getTitle = (event) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n    this.setState({\n      title: value,\n    });\n  }\n\n  createTodo = (event) => {\n    event.preventDefault();\n\n    this.props.addTodo({\n      ...this.state,\n      id: Date.now(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      changeTodoCompleted,\n      changeTodoCompletedAll,\n      filterDescription,\n      filterTodos,\n      destroyTodo,\n    } = this.props;\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.createTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onChange={this.getTitle}\n            value={title}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            onClick={changeTodoCompletedAll}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </section>\n        <TodoList\n          todos={(filterDescription === 'active'\n            || filterDescription === 'completed')\n            ? filterTodos\n            : todos\n          }\n          changeTodoCompleted={changeTodoCompleted}\n          destroyTodo={destroyTodo}\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addTodo: PropTypes.func.isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n  changeTodoCompletedAll: PropTypes.func.isRequired,\n  filterDescription: PropTypes.string.isRequired,\n  filterTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({ todosFilter, filterDescription }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        onClick={() => todosFilter('all')}\n        href=\"#/\"\n        className={filterDescription === 'all'\n          ? 'selected'\n          : ''}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        onClick={() => todosFilter('active')}\n        href=\"#/active\"\n        className={filterDescription === 'active'\n          ? 'selected'\n          : ''}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        onClick={() => todosFilter('completed')}\n        href=\"#/completed\"\n        className={filterDescription === 'completed'\n          ? 'selected'\n          : ''}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  todosFilter: PropTypes.func.isRequired,\n  filterDescription: PropTypes.string.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\n\nimport TodoApp from './components/TodoApp';\nimport TodoFilter from './components/TodoFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filterTodos: [],\n    filterDescription: 'all',\n    statusAllTodo: true,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      statusAllTodo: true,\n    }));\n  }\n\n  todosFilter = (desc) => {\n    this.setState((prevState) => {\n      switch (desc) {\n        case 'all':\n          return ({\n            filterTodos: prevState.todos,\n            filterDescription: 'all',\n          });\n\n        case 'active':\n          return ({\n            filterTodos: prevState.todos.filter(todo => !todo.completed),\n            filterDescription: 'active',\n          });\n\n        case 'completed':\n          return ({\n            filterTodos: prevState.todos.filter(todo => todo.completed),\n            filterDescription: 'completed',\n          });\n\n        default:\n          return ({});\n      }\n    });\n  }\n\n  changeTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, completed: !todo.completed }\n      )),\n      filterTodos: this.todosFilter(prevState.filterDescription),\n    }));\n  }\n\n  changeStatusAllTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      )),\n    }));\n  }\n\n  destroyTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  destroyAllCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      filterTodos: [],\n    }));\n  }\n\n  render() {\n    const { todos, filterTodos, filterDescription } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <TodoApp\n          todos={todos}\n          filterTodos={filterTodos}\n          filterDescription={filterDescription}\n          addTodo={this.addTodo}\n          changeTodoCompleted={this.changeTodoCompleted}\n          changeTodoCompletedAll={this.changeStatusAllTodos}\n          destroyTodo={this.destroyTodo}\n        />\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {(todos.filter(todo => !todo.completed)).length}\n            items left\n          </span>\n\n          <TodoFilter\n            filterDescription={filterDescription}\n            todosFilter={this.todosFilter}\n          />\n\n          <button\n            onClick={this.destroyAllCompletedTodos}\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todos\n              .some(todo => todo.completed)\n              ? { display: 'block' }\n              : { display: 'none' }}\n          >\n            Сlear completed\n          </button>\n        </footer>\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}